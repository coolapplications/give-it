{"ast":null,"code":"import { url } from './react-app-env.d';\nimport { fetchResultsSuccess, fetchResultsError, fetchResultsPending } from './actions/findResultsAction';\nexport function apiRequest(text, page) {\n  const limit = 10;\n  const offset = limit * (page - 1);\n  return dispatch => {\n    dispatch(fetchResultsPending());\n    fetch(`${url}search?q=${text}&offset=${offset}&limit=${limit}`).then(res => res.json()).then(res => {\n      if (res.error) {\n        throw res.error;\n      }\n\n      dispatch(fetchResultsSuccess(res.results));\n    }).catch(error => {\n      dispatch(fetchResultsError(error));\n    });\n  };\n}\nexport function apiSellerOnly(id) {\n  return fetch(`${url}search?seller_id=${id}`);\n}","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/apiService.tsx"],"names":["url","fetchResultsSuccess","fetchResultsError","fetchResultsPending","apiRequest","text","page","limit","offset","dispatch","fetch","then","res","json","error","results","catch","apiSellerOnly","id"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,mBAHF,QAIO,6BAJP;AAQA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAkCC,IAAlC,EAAgD;AACrD,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,MAAM,GAAGD,KAAK,IAAID,IAAI,GAAG,CAAX,CAApB;AACA,SAAQG,QAAD,IAAwB;AAC7BA,IAAAA,QAAQ,CAACN,mBAAmB,EAApB,CAAR;AACAO,IAAAA,KAAK,CAAE,GAAEV,GAAI,YAAWK,IAAK,WAAUG,MAAO,UAASD,KAAM,EAAxD,CAAL,CACGI,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACE,KAAR,EAAe;AACb,cAAMF,GAAG,CAACE,KAAV;AACD;;AAEDL,MAAAA,QAAQ,CAACR,mBAAmB,CAACW,GAAG,CAACG,OAAL,CAApB,CAAR;AACD,KARH,EASGC,KATH,CASSF,KAAK,IAAI;AACdL,MAAAA,QAAQ,CAACP,iBAAiB,CAACY,KAAD,CAAlB,CAAR;AACD,KAXH;AAYD,GAdD;AAeD;AACD,OAAO,SAASG,aAAT,CAAuBC,EAAvB,EAAmC;AACxC,SAAOR,KAAK,CAAE,GAAEV,GAAI,oBAAmBkB,EAAG,EAA9B,CAAZ;AACD","sourcesContent":["import { url } from './react-app-env.d';\nimport {\n  fetchResultsSuccess,\n  fetchResultsError,\n  fetchResultsPending\n} from './actions/findResultsAction';\nimport { Dispatch } from 'redux';\nimport IProduct from './models/ProductModel';\n\nexport function apiRequest(text: string, page: number) {\n  const limit = 10;\n  const offset = limit * (page - 1);\n  return (dispatch: Dispatch) => {\n    dispatch(fetchResultsPending());\n    fetch(`${url}search?q=${text}&offset=${offset}&limit=${limit}`)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          throw res.error;\n        }\n\n        dispatch(fetchResultsSuccess(res.results as IProduct[]));\n      })\n      .catch(error => {\n        dispatch(fetchResultsError(error));\n      });\n  };\n}\nexport function apiSellerOnly(id: number) {\n  return fetch(`${url}search?seller_id=${id}`);\n}\n"]},"metadata":{},"sourceType":"module"}