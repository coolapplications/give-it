{"ast":null,"code":"import _objectSpread from \"/Users/peliculas/empresariales/give-it/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { myFindResultsActionTypes } from '../actions/findResultsAction';\nconst defaultState = {\n  pending: false,\n  result: null,\n  error: null,\n  totalProducts: 1\n};\n\nfunction reducerResults(state = defaultState, action) {\n  switch (action.type) {\n    case myFindResultsActionTypes.fetchResultsPending:\n      {\n        return _objectSpread({}, state, {\n          pending: true\n        });\n      }\n\n    case myFindResultsActionTypes.fetchResultsSuccess:\n      {\n        return _objectSpread({}, state, {\n          pending: false,\n          result: action.payload\n        });\n      }\n\n    case myFindResultsActionTypes.fetchResultsError:\n      {\n        return _objectSpread({}, state, {\n          pending: false,\n          error: action.payload\n        });\n      }\n\n    case myFindResultsActionTypes.totalProductsChange:\n      {\n        return _objectSpread({}, state, {\n          totalProducts: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducerResults;","map":{"version":3,"sources":["/Users/peliculas/empresariales/give-it/src/reducers/searchResultsReducer.tsx"],"names":["myFindResultsActionTypes","defaultState","pending","result","error","totalProducts","reducerResults","state","action","type","fetchResultsPending","fetchResultsSuccess","payload","fetchResultsError","totalProductsChange"],"mappings":";AACA,SAEEA,wBAFF,QAGO,8BAHP;AAYA,MAAMC,YAAsB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,KADoB;AAE7BC,EAAAA,MAAM,EAAE,IAFqB;AAG7BC,EAAAA,KAAK,EAAE,IAHsB;AAI7BC,EAAAA,aAAa,EAAE;AAJc,CAA/B;;AAOA,SAASC,cAAT,CACEC,KAAe,GAAGN,YADpB,EAEEO,MAFF,EAGY;AACV,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,wBAAwB,CAACU,mBAA9B;AAAmD;AACjD,iCAAYH,KAAZ;AAAmBL,UAAAA,OAAO,EAAE;AAA5B;AACD;;AAED,SAAKF,wBAAwB,CAACW,mBAA9B;AAAmD;AACjD,iCAAYJ,KAAZ;AAAmBL,UAAAA,OAAO,EAAE,KAA5B;AAAmCC,UAAAA,MAAM,EAAEK,MAAM,CAACI;AAAlD;AACD;;AAED,SAAKZ,wBAAwB,CAACa,iBAA9B;AAAiD;AAC/C,iCAAYN,KAAZ;AAAmBL,UAAAA,OAAO,EAAE,KAA5B;AAAmCE,UAAAA,KAAK,EAAEI,MAAM,CAACI;AAAjD;AACD;;AACD,SAAKZ,wBAAwB,CAACc,mBAA9B;AAAmD;AACjD,iCAAYP,KAAZ;AAAmBF,UAAAA,aAAa,EAAEG,MAAM,CAACI;AAAzC;AACD;;AAED;AACE,aAAOL,KAAP;AAjBJ;AAmBD;;AAED,eAAeD,cAAf","sourcesContent":["import IProduct from '../models/ProductModel';\nimport {\n  fetchResultsActionTypes,\n  myFindResultsActionTypes\n} from '../actions/findResultsAction';\n\ninterface IResults {\n  pending: boolean;\n  result?: IProduct[] | null;\n  error?: any;\n  totalProducts: number;\n}\n\nconst defaultState: IResults = {\n  pending: false,\n  result: null,\n  error: null,\n  totalProducts: 1\n};\n\nfunction reducerResults(\n  state: IResults = defaultState,\n  action: fetchResultsActionTypes\n): IResults {\n  switch (action.type) {\n    case myFindResultsActionTypes.fetchResultsPending: {\n      return { ...state, pending: true };\n    }\n\n    case myFindResultsActionTypes.fetchResultsSuccess: {\n      return { ...state, pending: false, result: action.payload };\n    }\n\n    case myFindResultsActionTypes.fetchResultsError: {\n      return { ...state, pending: false, error: action.payload };\n    }\n    case myFindResultsActionTypes.totalProductsChange: {\n      return { ...state, totalProducts: action.payload };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducerResults;\n"]},"metadata":{},"sourceType":"module"}